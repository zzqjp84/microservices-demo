---
apiVersion: v1
kind: Namespace
metadata:
  name: sock-shop-v8
  labels:
    verrazzano-managed: "true"
    istio-injection: enabled
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oam-kubernetes-runtime-ingresses
rules:
  - apiGroups:
    - networking.k8s.io
    - extensions
    resources:
    - ingresses
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oam-kubernetes-runtime-ingresses
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oam-kubernetes-runtime-ingresses
subjects:
  - kind: ServiceAccount
    name: oam-kubernetes-runtime
    namespace: verrazzano-system
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: carts-deployment
  namespace: sock-shop-v8
  labels:
    name: carts
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: carts
      namespace: sock-shop-v8
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: carts
      template:
        metadata:
          labels:
            name: carts
        spec:
          containers:
          - name: carts
            image: weaveworksdemos/carts:0.4.8
            env:
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
            resources:
              limits:
                cpu: 300m
                memory: 500Mi
              requests:
                cpu: 100m
                memory: 200Mi
            ports:
            - containerPort: 80
            securityContext:
              runAsNonRoot: true
              runAsUser: 10001
              capabilities:
                drop:
                  - all
                add:
                  - NET_BIND_SERVICE
              readOnlyRootFilesystem: true
            volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          volumes:
            - name: tmp-volume
              emptyDir:
                medium: Memory
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: carts-service
  namespace: sock-shop-v8
  labels:
    name: carts
spec:
  workload:
    apiVersion: v1
    kind: Service
    metadata:
      name: carts
      namespace: sock-shop-v8
    spec:
      ports:
        # the port that this service should serve on
      - port: 80
        targetPort: 80
      selector:
        name: carts
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: carts-db-deployment
  namespace: sock-shop-v8
  labels:
    name: carts-db
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: carts-db
      namespace: sock-shop-v8
      labels:
        name: carts-db
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: carts-db
      template:
        metadata:
          labels:
            name: carts-db
        spec:
          containers:
          - name: carts-db
            image: mongo
            ports:
            - name: mongo
              containerPort: 27017
            securityContext:
              capabilities:
                drop:
                  - all
                add:
                  - CHOWN
                  - SETGID
                  - SETUID
              readOnlyRootFilesystem: false
            volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          volumes:
            - name: tmp-volume
              emptyDir:
                medium: Memory
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: carts-db-service
  namespace: sock-shop-v8
  labels:
    name: carts-db
spec:
  workload:
    apiVersion: v1
    kind: Service
    metadata:
      name: carts-db
      namespace: sock-shop-v8
    spec:
      ports:
        # the port that this service should serve on
      - port: 27017
        targetPort: 27017
      selector:
        name: carts-db
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: catalogue-deployment
  namespace: sock-shop-v8
  labels:
    name: catalogue
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: catalogue
      namespace: sock-shop-v8
      labels:
        name: catalogue
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: catalogue
      template:
        metadata:
          labels:
            name: catalogue
        spec:
          containers:
          - name: catalogue
            image: weaveworksdemos/catalogue:0.3.5
            command: ["/app"]
            args:
            - -port=80
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 80
            securityContext:
              runAsNonRoot: true
              runAsUser: 10001
              capabilities:
                drop:
                  - all
                add:
                  - NET_BIND_SERVICE
              readOnlyRootFilesystem: true
            livenessProbe:
              httpGet:
                path: /health
                port: 80
              initialDelaySeconds: 300
              periodSeconds: 3
            readinessProbe:
              httpGet:
                path: /health
                port: 80
              initialDelaySeconds: 180
              periodSeconds: 3
          nodeSelector:
            beta.kubernetes.io/os: linux  
---  
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: catalogue-service
  namespace: sock-shop-v8
  labels:
    name: catalogue
spec:
  workload:
    apiVersion: v1
    kind: Service
    metadata:
      name: catalogue
      namespace: sock-shop-v8
      labels:
        name: catalogue
    spec:
      ports:
        # the port that this service should serve on
      - port: 80
        targetPort: 80
      selector:
        name: catalogue
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: catalogue-db-deployment
  namespace: sock-shop-v8
  labels:
    name: catalogue-db
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: catalogue-db
      namespace: sock-shop-v8
      labels:
        name: catalogue-db
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: catalogue-db
      template:
        metadata:
          labels:
            name: catalogue-db
        spec:
          containers:
          - name: catalogue-db
            image: weaveworksdemos/catalogue-db:0.3.0
            env:
              - name: MYSQL_ROOT_PASSWORD
                value: fake_password
              - name: MYSQL_DATABASE
                value: socksdb
            ports:
            - name: mysql
              containerPort: 3306
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: catalogue-db-service
  namespace: sock-shop-v8
  labels:
    name: catalogue
spec:
  workload:
    apiVersion: v1
    kind: Service
    metadata:
      name: catalogue-db
      namespace: sock-shop-v8
      labels:
        name: catalogue-db
    spec:
      ports:
        # the port that this service should serve on
      - port: 3306
        targetPort: 3306
      selector:
        name: catalogue-db
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: front-end-deployment
  namespace: sock-shop-v8
  labels:
    name: front-end
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: front-end
      namespace: sock-shop-v8
    spec:
      replicas: 2
      selector:
        matchLabels:
          name: front-end
      template:
        metadata:
          labels:
            name: front-end
        spec:
          containers:
          - name: front-end
            image: weaveworksdemos/front-end:0.3.12
            resources:
              limits:
                cpu: 300m
                memory: 1000Mi
              requests:
                cpu: 100m
                memory: 300Mi
            ports:
            - containerPort: 8079
            env:
            - name: SESSION_REDIS
              value: "true"
            securityContext:
              runAsNonRoot: true
              runAsUser: 10001
              capabilities:
                drop:
                  - all
              readOnlyRootFilesystem: true
            livenessProbe:
              httpGet:
                path: /
                port: 8079
              initialDelaySeconds: 300
              periodSeconds: 3
            readinessProbe:
              httpGet:
                path: /
                port: 8079
              initialDelaySeconds: 30
              periodSeconds: 3
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: front-end-service
  namespace: sock-shop-v8
  labels:
    name: front-end
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: front-end
      namespace: sock-shop-v8
      labels:
        name: front-end
    spec:
      type: LoadBalancer
      ports:
      - port: 80
        targetPort: 8079
      selector:
        name: front-end
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: orders-deployment
  namespace: sock-shop-v8
  labels:
    name: orders
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: orders
      namespace: sock-shop-v8
      labels:
        name: orders
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: orders
      template:
        metadata:
          labels:
            name: orders
        spec:
          containers:
          - name: orders
            image: weaveworksdemos/orders:0.4.7
            env:
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
            resources:
              limits:
                cpu: 500m
                memory: 500Mi
              requests:
                cpu: 100m
                memory: 300Mi
            ports:
            - containerPort: 80
            securityContext:
              runAsNonRoot: true
              runAsUser: 10001
              capabilities:
                drop:
                  - all
                add:
                  - NET_BIND_SERVICE
              readOnlyRootFilesystem: true
            volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          volumes:
            - name: tmp-volume
              emptyDir:
                medium: Memory
          nodeSelector:
            beta.kubernetes.io/os: linux  
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: orders-service
  namespace: sock-shop-v8
  labels:
    name: orders
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: orders
      namespace: sock-shop-v8
      labels:
        name: orders
    spec:
      ports:
        # the port that this service should serve on
      - port: 80
        targetPort: 80
      selector:
        name: orders
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: orders-db-deployment
  namespace: sock-shop-v8
  labels:
    name: orders-db
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: orders-db
      namespace: sock-shop-v8
      labels:
        name: orders-db
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: orders-db
      template:
        metadata:
          labels:
            name: orders-db
        spec:
          containers:
          - name: orders-db
            image: mongo
            ports:
            - name: mongo
              containerPort: 27017
            securityContext:
              capabilities:
                drop:
                  - all
                add:
                  - CHOWN
                  - SETGID
                  - SETUID
              readOnlyRootFilesystem: false
            volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          volumes:
            - name: tmp-volume
              emptyDir:
                medium: Memory
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: orders-db-service
  namespace: sock-shop-v8
  labels:
    name: orders-db
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: orders-db
      namespace: sock-shop-v8
      labels:
        name: orders-db
    spec:
      ports:
        # the port that this service should serve on
      - port: 27017
        targetPort: 27017
      selector:
        name: orders-db
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: payment-deployment
  namespace: sock-shop-v8
  labels:
    name: payment
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: payment
      namespace: sock-shop-v8
      labels:
        name: payment
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: payment
      template:
        metadata:
          labels:
            name: payment
        spec:
          containers:
          - name: payment
            image: weaveworksdemos/payment:0.4.3
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 99m
                memory: 100Mi
            ports:
            - containerPort: 80
            securityContext:
              runAsNonRoot: true
              runAsUser: 10001
              capabilities:
                drop:
                  - all
                add:
                  - NET_BIND_SERVICE
              readOnlyRootFilesystem: true
            livenessProbe:
              httpGet:
                path: /health
                port: 80
              initialDelaySeconds: 300
              periodSeconds: 3
            readinessProbe:
              httpGet:
                path: /health
                port: 80
              initialDelaySeconds: 180
              periodSeconds: 3
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: payment-service
  namespace: sock-shop-v8
  labels:
    name: payment
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: payment
      namespace: sock-shop-v8
      labels:
        name: payment
    spec:
      ports:
        # the port that this service should serve on
      - port: 80
        targetPort: 80
      selector:
        name: payment
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: queue-master-deployment
  namespace: sock-shop-v8
  labels:
    name: queue-master
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: queue-master
      namespace: sock-shop-v8
      labels:
        name: queue-master
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: queue-master
      template:
        metadata:
          labels:
            name: queue-master
        spec:
          containers:
          - name: queue-master
            image: weaveworksdemos/queue-master:0.3.1
            env:
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
            resources:
              limits:
                cpu: 300m
                memory: 500Mi
              requests:
                cpu: 100m
                memory: 300Mi
            ports:
            - containerPort: 80
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: queue-master-service
  namespace: sock-shop-v8
  labels:
    name: queue-master
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: queue-master
      namespace: sock-shop-v8
      labels:
        name: queue-master
    spec:
      ports:
        # the port that this service should serve on
      - port: 80
        targetPort: 80
      selector:
        name: queue-master
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: rabbitmq-deployment
  namespace: sock-shop-v8
  labels:
    name: rabbitmq
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: rabbitmq
      namespace: sock-shop-v8
      labels:
        name: rabbitmq
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: rabbitmq
      template:
        metadata:
          labels:
            name: rabbitmq
        spec:
          containers:
          - name: rabbitmq
            image: rabbitmq:3.6.8-management
            ports:
            - containerPort: 15672
              name: management
            - containerPort: 5672
              name: rabbitmq
            securityContext:
              capabilities:
                drop:
                  - all
                add:
                  - CHOWN
                  - SETGID
                  - SETUID
                  - DAC_OVERRIDE
              readOnlyRootFilesystem: false
          - name: rabbitmq-exporter
            image: kbudde/rabbitmq-exporter
            ports:
            - containerPort: 9090
              name: exporter
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: rabbitmq-service
  namespace: sock-shop-v8
  labels:
    name: rabbitmq
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: rabbitmq
      namespace: sock-shop-v8
      labels:
        name: rabbitmq
    spec:
      ports:
        # the port that this service should serve on
      - port: 5672
        name: rabbitmq
        targetPort: 5672
      - port: 9090
        name: exporter
        targetPort: exporter
        protocol: TCP
      selector:
        name: rabbitmq
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: session-db-deployment
  namespace: sock-shop-v8
  labels:
    name: session-db
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: session-db
      namespace: sock-shop-v8
      labels:
        name: session-db
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: session-db
      template:
        metadata:
          labels:
            name: session-db
        spec:
          containers:
          - name: session-db
            image: redis:alpine
            ports:
            - name: redis
              containerPort: 6379
            securityContext:
              capabilities:
                drop:
                  - all
                add:
                  - CHOWN
                  - SETGID
                  - SETUID
              readOnlyRootFilesystem: false
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: session-db-service
  namespace: sock-shop-v8
  labels:
    name: session-db
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: session-db
      namespace: sock-shop-v8
      labels:
        name: session-db
    spec:
      ports:
        # the port that this service should serve on
      - port: 6379
        targetPort: 6379
      selector:
        name: session-db
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: shipping-deployment
  namespace: sock-shop-v8
  labels:
    name: shipping-db
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: shipping
      namespace: sock-shop-v8
      labels:
        name: shipping
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: shipping
      template:
        metadata:
          labels:
            name: shipping
        spec:
          containers:
          - name: shipping
            image: weaveworksdemos/shipping:0.4.8
            env:
            - name: ZIPKIN
              value: zipkin.jaeger.svc.cluster.local
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
            resources:
              limits:
                cpu: 300m
                memory: 500Mi
              requests:
                cpu: 100m
                memory: 300Mi
            ports:
            - containerPort: 80
            securityContext:
              runAsNonRoot: true
              runAsUser: 10001
              capabilities:
                drop:
                  - all
                add:
                  - NET_BIND_SERVICE
              readOnlyRootFilesystem: true
            volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          volumes:
            - name: tmp-volume
              emptyDir:
                medium: Memory
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: shipping-service
  namespace: sock-shop-v8
  labels:
    name: shipping
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: shipping
      namespace: sock-shop-v8
      labels:
        name: shipping
    spec:
      ports:
        # the port that this service should serve on
      - port: 80
        targetPort: 80
      selector:
        name: shipping
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: user-deployment
  namespace: sock-shop-v8
  labels:
    name: user
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: user
      namespace: sock-shop-v8
      labels:
        name: user
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: user
      template:
        metadata:
          labels:
            name: user
        spec:
          containers:
          - name: user
            image: weaveworksdemos/user:0.4.7
            resources:
              limits:
                cpu: 300m
                memory: 200Mi
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 80
            env:
            - name: mongo
              value: user-db:27017
            securityContext:
              runAsNonRoot: true
              runAsUser: 10001
              capabilities:
                drop:
                  - all
                add:
                  - NET_BIND_SERVICE
              readOnlyRootFilesystem: true
            livenessProbe:
              httpGet:
                path: /health
                port: 80
              initialDelaySeconds: 300
              periodSeconds: 3
            readinessProbe:
              httpGet:
                path: /health
                port: 80
              initialDelaySeconds: 180
              periodSeconds: 3
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: user-service
  namespace: sock-shop-v8
  labels:
    name: user
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: user
      namespace: sock-shop-v8
      labels:
        name: user
    spec:
      ports:
        # the port that this service should serve on
      - port: 80
        targetPort: 80
      selector:
        name: user
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: user-db-deployment
  namespace: sock-shop-v8
  labels:
    name: user-db
spec:
  workload: 
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: user-db
      namespace: sock-shop-v8
      labels:
        name: user-db
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: user-db
      template:
        metadata:
          labels:
            name: user-db
        spec:
          containers:
          - name: user-db
            image: weaveworksdemos/user-db:0.3.0

            ports:
            - name: mongo
              containerPort: 27017
            securityContext:
              capabilities:
                drop:
                  - all
                add:
                  - CHOWN
                  - SETGID
                  - SETUID
              readOnlyRootFilesystem: false
            volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          volumes:
            - name: tmp-volume
              emptyDir:
                medium: Memory
          nodeSelector:
            beta.kubernetes.io/os: linux
---
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: user-db-service
  namespace: sock-shop-v8
  labels:
    name: user-db
spec:
  workload: 
    apiVersion: v1
    kind: Service
    metadata:
      name: user-db
      namespace: sock-shop-v8
      labels:
        name: user-db
    spec:
      ports:
        # the port that this service should serve on
      - port: 27017
        targetPort: 27017
      selector:
        name: user-db
---
apiVersion: core.oam.dev/v1alpha2
kind: ApplicationConfiguration
metadata:
  name: sock-shop-v8
  namespace: sock-shop-v8
  annotations:
    version: v1.0.0
    description: "Sock Shop Microservices Demo"
spec:
  components:
    - componentName: carts-deployment
      traits:
        - trait:
            apiVersion: oam.verrazzano.io/v1alpha1
            kind: MetricsTrait
            spec:
                port: 80
                scraper: verrazzano-system/vmi-system-prometheus-0
    - componentName: carts-service
    - componentName: carts-db-deployment
    - componentName: carts-db-service
    - componentName: catalogue-deployment
      traits:
        - trait:
            apiVersion: oam.verrazzano.io/v1alpha1
            kind: MetricsTrait
            spec:
                port: 80
                scraper: verrazzano-system/vmi-system-prometheus-0
    - componentName: catalogue-service
    - componentName: catalogue-db-deployment
    - componentName: catalogue-db-service
    - componentName: front-end-deployment
    - componentName: front-end-service
      traits:
        - trait:
            apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              name: sock-shop-v8-ingress
              annotations:
                kubernetes.io/ingress.class: istio
            spec:
              rules:
              - host: sockshop.144.22.250.208.nip.io
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: front-end
                          port: 
                            number: 80         
    - componentName: orders-deployment
      traits:
        - trait:
            apiVersion: oam.verrazzano.io/v1alpha1
            kind: MetricsTrait
            spec:
                port: 80
                scraper: verrazzano-system/vmi-system-prometheus-0
    - componentName: orders-service
    - componentName: orders-db-deployment
    - componentName: orders-db-service
    - componentName: payment-deployment
      traits:
        - trait:
            apiVersion: oam.verrazzano.io/v1alpha1
            kind: MetricsTrait
            spec:
                port: 80
                scraper: verrazzano-system/vmi-system-prometheus-0
    - componentName: payment-service
    - componentName: queue-master-deployment
      traits:
        - trait:
            apiVersion: oam.verrazzano.io/v1alpha1
            kind: MetricsTrait
            spec:
                port: 80
                scraper: verrazzano-system/vmi-system-prometheus-0
    - componentName: queue-master-service
    - componentName: rabbitmq-deployment
    - componentName: rabbitmq-service
    - componentName: session-db-deployment
    - componentName: session-db-service
    - componentName: shipping-deployment
      traits:
        - trait:
            apiVersion: oam.verrazzano.io/v1alpha1
            kind: MetricsTrait
            spec:
                port: 80
                scraper: verrazzano-system/vmi-system-prometheus-0
    - componentName: shipping-service
    - componentName: user-deployment
      traits:
        - trait:
            apiVersion: oam.verrazzano.io/v1alpha1
            kind: MetricsTrait
            spec:
                port: 80
                scraper: verrazzano-system/vmi-system-prometheus-0
    - componentName: user-service
    - componentName: user-db-deployment
    - componentName: user-db-service
---
